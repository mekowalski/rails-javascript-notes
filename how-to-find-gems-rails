RUBYGEMS ECOSYSTEM
-Ruby gems are commonly used, frequently: RSpec for testing, frameworks, styling, etc
-Many common issues have already been solved by someone releasing a gem to help, allowing developers to reach
 incredible levels of productivity
-Ruby enables people to freely give back to the community of developers in the form of gems


DO YOU NEED A GEM
-Wealth of gems available is what sets Ruby apart from other languages
-Gem Madness may occur where developers may consider a gem for every issue encountered


WHERE TO LOOK
-Can look for gems in the command line(terminal, console)
eg: in a non-project directory
    gem search ^twitter$ -d
    =>
    *** REMOTE GEMS ***

    twitter (6.2.0)
        Authors: Erik Michaels-Ober, John Nunemaker, Wynn Netherland, Steve
        Richert, Steve Agalloco
        Homepage: http://sferik.github.com/twitter/

        A Ruby interface to the Twitter API.

-gem search: takes a regex, handy if you know name or part of gem name
-Ruby Toolbox: helpful site that sorts and organizes gems on rank of total downloads, releases and active
 commits
 *also COMPREHENSIVE*
-Awesome Ruby and Awesome Rails Gem: 2 open resource, community maintained lists of most popular gems for
 Ruby and Rails


QUALITIES FOR CHOOSING GEMS
-How popular is it
  1. How many downloads, how recent are commits, how many versions
  2. See if it's on Awesome Rails and Awesome Ruby
  3. Google gem name and check out resources returned(gem tutorials, name errors)
  4. StackOverflow for what community says about gem
  5. Search Github for documentation, code, methods etc

-How well-maintained is it
  1. Read code, it is put together expectantly, can you understand it, does it follow Ruby idioms/styles
  2. Is it well-documented, it the README descriptive or bare minimum
  3. Look at issues and PRs, how long are they open, are there active committers, have issues been resolved
  4. Look for tests(/test or /spec DIRs) how many tests present
