WORKING WITH POST API ENDPOINT
-Once data begins to change on server, requests are made via POST

-POSTING WITH POSTMAN
-Need OAuth token to do this, temporarily display on the page to copy and paste it
eg: searches/search.html.erb
    <%= session[:token] %>
    -Output session[:token], run Rails server and browse /search
    -Should look something like: B2JPA4ZSC5244X1Q1C2OPWYGTZ2LSALF1Z

-Would never output token in real world but just to play around with Postman
-Postman will provide list of previous queries under History, grab ID value
eg: post to https://api.foursquare.com/v2/tips/add
    -set params per the docs:
    venueId       YOUR_VENUE_ID
    text          Love this place!
    oauth_token   YOUR_TOKEN
    v             20160201

    -hit Send and should get a response like
    "response": {
      "tip": {
        "id": "56c223e1498e82b67c98f548",
        "createdAt": 1455563745,
        "text": "Love this place!",
        "type": "user",
        "canonicalUrl": "https://foursquare.com/item/56c223e1498e82b67c98f548",
        "likes": {
          "count": 0,
          "groups": []
        },
    // ...
*created a tip*


POSTING IN RAILS WITH FARADAY
-Create a way to POST tip on a venue after searching for it
eg: search.html.erb
    <h1>Search for Coffee Shops Near Me</h1>
    <%= form_tag '/search' do %>
      <%= label_tag :zipcode %>
      <%= text_field_tag :zipcode %>
      <%= submit_tag "Search!" %>
    <% end %>
    <div>
      <% if @error %>
        <p><%= @error %></p>
      <% elsif @venues %>
        <ul>
        <% @venues.each do |venue| %>
          <li>
            <%= venue["name"] %><br>
            <%= venue["location"]["address"] %><br>
            Checkins: <%= venue["stats"]["checkinsCount"] %><br>
            <%= form_tag '/tips' do %>
              <%= hidden_field_tag :venue_id, venue["id"] %>
              Add tip: <%= text_field_tag :tip %><%= submit_tag "Add Tip" %>
            <% end %>
          </li>
        <% end %>
        </ul>
      <% end %>
    </div>
*Need to keep track of venue ID, hold onto it in hidden_field_tag. NOW IS GOOD TIME TO DELETE OUTPUTS*

-Set up routes and controller
eg: routes.rb
    resources :tips, only: [:index, :create]

    -tips_controller.rb
    def create
      resp = Faraday.post('https://api.foursquare/com/v2/tips/add') do |req|
        req.params['oauth_token'] = sessions[:token]
        req.params['v'] = '20160201'
        req.params['venueId'] = params[:venueId]
        req.params['text'] = params[:tip]
      end
      redirect_to tips_path
    end

*Similar to other calls made but using Faraday.post instead of Faraday.get, wanting to show that it worked*

-Set up controller
eg: tips_controller.rb
    def index
      resp = Faraday.get('https://api.foursquare.com/v2/lists/self/tips') do |req|
        req.params['oauth_token'] = session[:token]
        req.params['v'] = '20160201'
      end
      @results = JSON.parse(resp.body)['response']['list']['listItems']['items']
    end

*Similar to friends action. Nesting deep in response to retrieve correct tips*

-Set up index view
eg: tips/index.html.erb
    <h1>My Tips</h1>
    <ul>
      <% @results.each do |item| %>
        <li>
        <strong><%= item['venue']['name'] %></strong><br>
        <%= item['tip']['text'] %>
        </li>
      <% end %>
    </ul>
