Asset Pipeline(AP) can help manage chaos of stylesheets with JS

MANIFEST FILES
-CSS manifest has special syntax that differentiates it from a regular CSS file
*= require directive simialar to JS counterpart but just using CSS comment instead of JS comment
eg:
  /*
  *= require main
  */


REQUIRE DIRECTIVES
-If it is located in one of the configured folders, when requiring a CSS asset, it will be included in app
-When requiring, the path must be asset path
eg:
  app/assets/stylesheets.blogs/main.css
  *= require 'blogs/main'


LOADING MANIFEST FILE IN LAYOUT
-Including manifest file in layout with use of: style_link_tag in application layout file
-Sprocket takes care of loading manifest and determining which assets to include
eg:
  <%= stylesheet_link_tag 'application' %>

-Development: each CSS file will get its own link tag for easier debugging
eg:
  /*
  *= require main => <link rel="stylesheet" href="/assets/main.css" />
  *= require beers => <link rel="stylesheet" href="/assets/beers.css" />
  *= require companies => <link rel="stylesheet" href="/assets/companies.css" />
  */


MANIFESTS IN PRODUCTION
-Sprockets tale care of all CSS files creating one large CSS file
-Also minify the contents, removing unneeded whitespace to reduce overall size
-Both of these things will speed up page loads
eg:
  /*
  *= require main
  *= require beers
  *= require companies
  */
  => <link rel="stylesheet" href="/assets/application-4dd5b109ee3439da54f5bdfd78a80473.css" />

*the minified version provides no whitespace but becomes hard to read therefore development mode is used with
 inidividual, unminified files instead*
